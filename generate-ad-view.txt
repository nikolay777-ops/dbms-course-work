CREATE OR REPLACE FUNCTION generate_ad_view()
RETURNS TRIGGER AS $$
DECLARE
  v_ad_id INTEGER;
BEGIN
  -- Найти рекламу с наивысшим приоритетом
  SELECT ad.id INTO v_ad_id
  FROM advertisements ad
  JOIN adv_type at ON ad.type_id = at.id
  ORDER BY at.priority DESC
  LIMIT 1;

  -- Создать запись просмотра рекламы
  INSERT INTO ad_views (ad_id, movie_id, user_id, viewed_at, successful)
  VALUES (v_ad_id, (SELECT movie_id FROM online_movies WHERE id = NEW.online_movie_id), NEW.user_id, NOW(), FALSE);

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER generate_ad_view_trigger
BEFORE INSERT ON views
FOR EACH ROW EXECUTE PROCEDURE generate_ad_view();

-- Создание записей в таблицах
INSERT INTO movies (title, description, release_date, rating, duration, genre_id, country_id, age_restriction_id)
VALUES ('Movie 1', 'Description 1', '2023-01-01', 0, '02:00:00', 1, 1, 1);

INSERT INTO online_movies (id, movie_id)
VALUES (1, 1);

INSERT INTO users (id, name)
VALUES (1, 'User 1');

INSERT INTO adv_type (id, name, priority)
VALUES (1, 'Type 1', 1);

INSERT INTO advertisements (id, title, description, url, type_id)
VALUES (1, 'Ad 1', 'Description 1', 'http://example.com', 1);

-- Вставка записи в таблицу views
INSERT INTO views (online_movie_id, view_time, view_dur_time, user_id)
VALUES (1, NOW(), '02:00:00', 1);
